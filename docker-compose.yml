version: '3'

services:
  kafka-ui:
    container_name: kafka-ui
    networks:
      - kafka-ui
    build:
      context: ./webapp/
    image: kafka-ui
    ports:
      - 8080:8080

  rethinkdb:
    image: rethinkdb:2.3.6
    container_name: rethinkdb
    networks:
      - kafka-ui
    volumes:
      - ./data/rethinkdb:/data
    ports:
      - 8081:8080
      - 29015:29015
      - 28015:28015

  zookeeper:
    image: zookeeper:3.4.14
    hostname: zookeeper
    networks:
      - kafka-ui
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    ports:
      - 2181:2181
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    networks:
      - kafka-ui
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    ports:
      - 9092:9092
    depends_on:
      - zookeeper

networks:
  kafka-ui: